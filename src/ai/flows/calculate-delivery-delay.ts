// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Calculates the delivery delay in days between the scheduled and actual delivery dates.
 *
 * - calculateDeliveryDelay - A function that calculates the delivery delay.
 * - CalculateDeliveryDelayInput - The input type for the calculateDeliveryDelay function.
 * - CalculateDeliveryDelayOutput - The return type for the calculateDeliveryDelay function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const CalculateDeliveryDelayInputSchema = z.object({
  scheduledDate: z
    .string()
    .describe('The scheduled delivery date in ISO 8601 format (YYYY-MM-DD).'),
  actualDate: z
    .string()
    .describe('The actual delivery date in ISO 8601 format (YYYY-MM-DD).'),
});
export type CalculateDeliveryDelayInput = z.infer<typeof CalculateDeliveryDelayInputSchema>;

const CalculateDeliveryDelayOutputSchema = z.object({
  delayInDays: z
    .number()
    .describe('The number of days the delivery was delayed.  Negative values indicate early delivery.'),
});
export type CalculateDeliveryDelayOutput = z.infer<typeof CalculateDeliveryDelayOutputSchema>;

export async function calculateDeliveryDelay(
  input: CalculateDeliveryDelayInput
): Promise<CalculateDeliveryDelayOutput> {
  return calculateDeliveryDelayFlow(input);
}

const calculateDeliveryDelayFlow = ai.defineFlow(
  {
    name: 'calculateDeliveryDelayFlow',
    inputSchema: CalculateDeliveryDelayInputSchema,
    outputSchema: CalculateDeliveryDelayOutputSchema,
  },
  async input => {
    const scheduledDate = new Date(input.scheduledDate);
    const actualDate = new Date(input.actualDate);

    // Calculate the difference in milliseconds
    const diffInMs = actualDate.getTime() - scheduledDate.getTime();

    // Convert milliseconds to days
    const delayInDays = diffInMs / (1000 * 60 * 60 * 24);

    return {delayInDays};
  }
);
